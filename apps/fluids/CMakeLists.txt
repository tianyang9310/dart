# cmake_minimum_required(VERSION 2.8.6)
# project(Fluids)
# 
# if(CMAKE_COMPILER_IS_GNUCXX)
#   set(CMAKE_CXX_FLAGS "-Wall -msse2 -fPIC")
#   execute_process(
#     COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
#   set(CXX_COMPILER_VERSION ${GCC_VERSION})
#   if(GCC_VERSION VERSION_LESS 4.8)
#     message(FATAL_ERROR "The installed g++ version is ${GCC_VERSION}. ${PROJECT_NAME} requires g++ 4.8 or greater.")
#   else()
#     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
#   endif()
# elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
#   set(CMAKE_CXX_FLAGS "-msse2 -fPIC")
#   execute_process(
#     COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE CLANG_VERSION)
#   set(CXX_COMPILER_VERSION ${CLANG_VERSION})
#   if(CLANG_VERSION VERSION_LESS 3.3)
#     message(FATAL_ERROR "The installed Clang version is ${CLANG_VERSION}. ${PROJECT_NAME} requires clang 3.3 or greater.")
#   else()
#     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
#   endif()
#   if("${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")
#     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
#   endif()
# endif()
# 
# set(EIGEN3_INCLUDE_DIRS "Eigen")
# find_package(OpenGL QUIET)
# find_package(GLUT QUIET)
# 
# include_directories(BEFORE ${PROJECT_SOURCE_DIR})
# include_directories(SYSTEM ${EIGEN3_INCLUDE_DIRS})
# include_directories(SYSTEM ${OPENGL_INCLUDE_DIR})
# include_directories(SYSTEM ${GLUT_INCLUDE_DIR})

file(GLOB SRC_LIST "*.cpp" "*.h")
add_executable( fluids ${SRC_LIST})
target_link_libraries(fluids ${OPENGL_LIBRARIES} ${GLUT_LIBRARY})
set_target_properties(fluids PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

