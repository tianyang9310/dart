/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

class UnityOdePINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("UnityOde", EntryPoint="SWIGRegisterExceptionCallbacks_UnityOde")]
    public static extern void SWIGRegisterExceptionCallbacks_UnityOde(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("UnityOde", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_UnityOde")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_UnityOde(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_UnityOde(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_UnityOde(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(UnityOdePINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(UnityOdePINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("UnityOde", EntryPoint="SWIGRegisterStringCallback_UnityOde")]
    public static extern void SWIGRegisterStringCallback_UnityOde(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_UnityOde(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static UnityOdePINVOKE() {
  }


  [DllImport("UnityOde", EntryPoint="CSharp_ALLTHREADS_get")]
  public static extern int ALLTHREADS_get();

  [DllImport("UnityOde", EntryPoint="CSharp_setCurrentOdeContext")]
  public static extern void setCurrentOdeContext(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_initOde")]
  public static extern bool initOde(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_uninitOde")]
  public static extern bool uninitOde();

  [DllImport("UnityOde", EntryPoint="CSharp_initialized")]
  public static extern bool initialized();

  [DllImport("UnityOde", EntryPoint="CSharp_odeRandSetSeed")]
  public static extern void odeRandSetSeed(uint jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_allocateODEDataForThread")]
  public static extern void allocateODEDataForThread();

  [DllImport("UnityOde", EntryPoint="CSharp_enableJointFeedback")]
  public static extern void enableJointFeedback(bool jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetAccumulatedForce")]
  public static extern void odeBodyGetAccumulatedForce(int jarg1, int jarg2, /* imtype */ IntPtr jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetAccumulatedTorque")]
  public static extern void odeBodyGetAccumulatedTorque(int jarg1, int jarg2, /* imtype */ IntPtr jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_stepOde")]
  public static extern bool stepOde(float jarg1, bool jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_stepOdeFast")]
  public static extern bool stepOdeFast(float jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_saveOdeState__SWIG_0")]
  public static extern bool saveOdeState__SWIG_0(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_saveOdeState__SWIG_1")]
  public static extern bool saveOdeState__SWIG_1(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_saveOdeState__SWIG_2")]
  public static extern bool saveOdeState__SWIG_2();

  [DllImport("UnityOde", EntryPoint="CSharp_restoreOdeState__SWIG_0")]
  public static extern bool restoreOdeState__SWIG_0(int jarg1, bool jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_restoreOdeState__SWIG_1")]
  public static extern bool restoreOdeState__SWIG_1(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_restoreOdeState__SWIG_2")]
  public static extern bool restoreOdeState__SWIG_2();

  [DllImport("UnityOde", EntryPoint="CSharp_saveOdeStateToFile")]
  public static extern bool saveOdeStateToFile(string jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_loadOdeStateFromFile")]
  public static extern bool loadOdeStateFromFile(string jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeFixUnityRotation")]
  public static extern void odeFixUnityRotation(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeSetContactSoftCFM")]
  public static extern void odeSetContactSoftCFM(float jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeSetFrictionCoefficient")]
  public static extern void odeSetFrictionCoefficient(float jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyCreate")]
  public static extern int odeBodyCreate();

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyDestroy")]
  public static extern void odeBodyDestroy(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetPosition")]
  public static extern void odeBodySetPosition(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetQuaternion")]
  public static extern bool odeBodySetQuaternion(int jarg1, /* imtype */ IntPtr jarg2, bool jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetLinearVel")]
  public static extern void odeBodySetLinearVel(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetAngularVel")]
  public static extern void odeBodySetAngularVel(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetPosition")]
  public static extern /* imtype out */ IntPtr odeBodyGetPosition(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetQuaternion")]
  public static extern /* imtype out */ IntPtr odeBodyGetQuaternion(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetLinearVel")]
  public static extern /* imtype out */ IntPtr odeBodyGetLinearVel(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetAngularVel")]
  public static extern /* imtype out */ IntPtr odeBodyGetAngularVel(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetMass")]
  public static extern void odeBodySetMass(int jarg1, float jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetMass")]
  public static extern float odeBodyGetMass(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyAddForce")]
  public static extern void odeBodyAddForce(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyAddTorque")]
  public static extern void odeBodyAddTorque(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyAddRelForce")]
  public static extern void odeBodyAddRelForce(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyAddRelTorque")]
  public static extern void odeBodyAddRelTorque(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyAddForceAtPos")]
  public static extern void odeBodyAddForceAtPos(int jarg1, /* imtype */ IntPtr jarg2, /* imtype */ IntPtr jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyAddForceAtRelPos")]
  public static extern void odeBodyAddForceAtRelPos(int jarg1, /* imtype */ IntPtr jarg2, /* imtype */ IntPtr jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyAddRelForceAtPos")]
  public static extern void odeBodyAddRelForceAtPos(int jarg1, /* imtype */ IntPtr jarg2, /* imtype */ IntPtr jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyAddRelForceAtRelPos")]
  public static extern void odeBodyAddRelForceAtRelPos(int jarg1, /* imtype */ IntPtr jarg2, /* imtype */ IntPtr jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetForce")]
  public static extern void odeBodySetForce(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetTorque")]
  public static extern void odeBodySetTorque(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetForce")]
  public static extern /* imtype out */ IntPtr odeBodyGetForce(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyGetTorque")]
  public static extern /* imtype out */ IntPtr odeBodyGetTorque(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetDynamic")]
  public static extern bool odeBodySetDynamic(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodySetKinematic")]
  public static extern bool odeBodySetKinematic(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeBodyIsKinematic")]
  public static extern bool odeBodyIsKinematic(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomDestroy")]
  public static extern void odeGeomDestroy(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomSetBody")]
  public static extern bool odeGeomSetBody(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomGetBody")]
  public static extern int odeGeomGetBody(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomSetPosition")]
  public static extern void odeGeomSetPosition(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomSetQuaternion")]
  public static extern void odeGeomSetQuaternion(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomGetPosition")]
  public static extern /* imtype out */ IntPtr odeGeomGetPosition(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomGetQuaternion")]
  public static extern void odeGeomGetQuaternion(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomSetOffsetWorldPosition")]
  public static extern void odeGeomSetOffsetWorldPosition(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomSetCategoryBits")]
  public static extern void odeGeomSetCategoryBits(int jarg1, uint jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomSetCollideBits")]
  public static extern void odeGeomSetCollideBits(int jarg1, uint jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomGetCategoryBits")]
  public static extern uint odeGeomGetCategoryBits(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomGetCollideBits")]
  public static extern uint odeGeomGetCollideBits(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeCreateSphere")]
  public static extern int odeCreateSphere(float jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomSphereSetRadius")]
  public static extern void odeGeomSphereSetRadius(int jarg1, float jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomSphereGetRadius")]
  public static extern float odeGeomSphereGetRadius(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_dGeomSpherePointDepth")]
  public static extern float dGeomSpherePointDepth(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeCreateBox")]
  public static extern int odeCreateBox(float jarg1, float jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomBoxSetLengths")]
  public static extern void odeGeomBoxSetLengths(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomBoxGetLengths")]
  public static extern void odeGeomBoxGetLengths(int jarg1, out float jarg2, out float jarg3, out float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_dGeomBoxPointDepth")]
  public static extern float dGeomBoxPointDepth(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeCreatePlane")]
  public static extern int odeCreatePlane(int jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomPlaneSetParams")]
  public static extern void odeGeomPlaneSetParams(int jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomPlanePointDepth")]
  public static extern float odeGeomPlanePointDepth(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeCreateHeightfield")]
  public static extern int odeCreateHeightfield(HandleRef jarg1, float jarg2, float jarg3, int jarg4, int jarg5, float jarg6, float jarg7, float jarg8, int jarg9);

  [DllImport("UnityOde", EntryPoint="CSharp_odeCreateCapsule")]
  public static extern int odeCreateCapsule(int jarg1, float jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomCapsuleSetParams")]
  public static extern void odeGeomCapsuleSetParams(int jarg1, float jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomCapsuleGetParams")]
  public static extern void odeGeomCapsuleGetParams(int jarg1, out float jarg2, out float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGeomCapsulePointDepth")]
  public static extern float odeGeomCapsulePointDepth(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreateBall")]
  public static extern int odeJointCreateBall();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreateHinge")]
  public static extern int odeJointCreateHinge();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreateSlider")]
  public static extern int odeJointCreateSlider();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreateUniversal")]
  public static extern int odeJointCreateUniversal();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreateHinge2")]
  public static extern int odeJointCreateHinge2();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreatePR")]
  public static extern int odeJointCreatePR();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreatePU")]
  public static extern int odeJointCreatePU();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreatePiston")]
  public static extern int odeJointCreatePiston();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreateFixed")]
  public static extern int odeJointCreateFixed();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreateAMotor")]
  public static extern int odeJointCreateAMotor();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreateLMotor")]
  public static extern int odeJointCreateLMotor();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointCreatePlane2D")]
  public static extern int odeJointCreatePlane2D();

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointAttach")]
  public static extern void odeJointAttach(int jarg1, int jarg2, int jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetType")]
  public static extern int odeJointGetType(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetBody")]
  public static extern int odeJointGetBody(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetBallAnchor")]
  public static extern void odeJointSetBallAnchor(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetBallAnchor")]
  public static extern void odeJointGetBallAnchor(int jarg1, out float jarg2, out float jarg3, out float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetBallAnchor2")]
  public static extern void odeJointGetBallAnchor2(int jarg1, out float jarg2, out float jarg3, out float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetHingeAnchor")]
  public static extern void odeJointSetHingeAnchor(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetHingeAxis")]
  public static extern void odeJointSetHingeAxis(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetHingeAnchor")]
  public static extern void odeJointGetHingeAnchor(int jarg1, out float jarg2, out float jarg3, out float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetHingeAnchor2")]
  public static extern void odeJointGetHingeAnchor2(int jarg1, out float jarg2, out float jarg3, out float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetHingeAxis")]
  public static extern void odeJointGetHingeAxis(int jarg1, out float jarg2, out float jarg3, out float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetHingeAngle")]
  public static extern float odeJointGetHingeAngle(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetHingeAngleRate")]
  public static extern float odeJointGetHingeAngleRate(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetHingeAngleFromBodyRotations")]
  public static extern float odeJointGetHingeAngleFromBodyRotations(int jarg1, /* imtype */ IntPtr jarg2, /* imtype */ IntPtr jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetAMotorMode")]
  public static extern void odeJointSetAMotorMode(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetAMotorMode")]
  public static extern int odeJointGetAMotorMode(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetAMotorNumAxes")]
  public static extern void odeJointSetAMotorNumAxes(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetAMotorNumAxes")]
  public static extern int odeJointGetAMotorNumAxes(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetAMotorAxis")]
  public static extern void odeJointSetAMotorAxis(int jarg1, int jarg2, int jarg3, float jarg4, float jarg5, float jarg6);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetAMotorAxis")]
  public static extern void odeJointGetAMotorAxis(int jarg1, int jarg2, out float jarg3, out float jarg4, out float jarg5);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetAMotorAxisRel")]
  public static extern int odeJointGetAMotorAxisRel(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetAMotorAngle")]
  public static extern void odeJointSetAMotorAngle(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetAMotorAngle")]
  public static extern float odeJointGetAMotorAngle(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetAMotorAngleRate")]
  public static extern float odeJointGetAMotorAngleRate(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetAMotorAnglesFromBodyRotations")]
  public static extern void odeJointGetAMotorAnglesFromBodyRotations(int jarg1, /* imtype */ IntPtr jarg2, /* imtype */ IntPtr jarg3, /* imtype */ IntPtr jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetBallParam")]
  public static extern void odeJointSetBallParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetHingeParam")]
  public static extern void odeJointSetHingeParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetSliderParam")]
  public static extern void odeJointSetSliderParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetHinge2Param")]
  public static extern void odeJointSetHinge2Param(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetUniversalParam")]
  public static extern void odeJointSetUniversalParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetAMotorParam")]
  public static extern void odeJointSetAMotorParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetLMotorParam")]
  public static extern void odeJointSetLMotorParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetPRParam")]
  public static extern void odeJointSetPRParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetPUParam")]
  public static extern void odeJointSetPUParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetPistonParam")]
  public static extern void odeJointSetPistonParam(int jarg1, int jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetBallParam")]
  public static extern float odeJointGetBallParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetHingeParam")]
  public static extern float odeJointGetHingeParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetSliderParam")]
  public static extern float odeJointGetSliderParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetHinge2Param")]
  public static extern float odeJointGetHinge2Param(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetUniversalParam")]
  public static extern float odeJointGetUniversalParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetAMotorParam")]
  public static extern float odeJointGetAMotorParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetLMotorParam")]
  public static extern float odeJointGetLMotorParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetPRParam")]
  public static extern float odeJointGetPRParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetPUParam")]
  public static extern float odeJointGetPUParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetPistonParam")]
  public static extern float odeJointGetPistonParam(int jarg1, int jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointAddHingeTorque")]
  public static extern void odeJointAddHingeTorque(int jarg1, float jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointAddUniversalTorques")]
  public static extern void odeJointAddUniversalTorques(int jarg1, float jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointAddSliderForce")]
  public static extern void odeJointAddSliderForce(int jarg1, float jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointAddHinge2Torques")]
  public static extern void odeJointAddHinge2Torques(int jarg1, float jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointAddAMotorTorques")]
  public static extern void odeJointAddAMotorTorques(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetFmax")]
  public static extern void odeJointSetFmax(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointGetMotorAnglesDegrees")]
  public static extern void odeJointGetMotorAnglesDegrees(int jarg1, /* imtype */ IntPtr jarg2);

  [DllImport("UnityOde", EntryPoint="CSharp_odeJointSetAMotorVelocitiesDegreesPerSecond")]
  public static extern void odeJointSetAMotorVelocitiesDegreesPerSecond(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_clampControlVelocitiesAtStops")]
  public static extern void clampControlVelocitiesAtStops(int jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_setMotorVelocities")]
  public static extern void setMotorVelocities(int jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeMassSetSphere")]
  public static extern void odeMassSetSphere(int jarg1, float jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeMassSetSphereTotal")]
  public static extern void odeMassSetSphereTotal(int jarg1, float jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeMassSetCapsule")]
  public static extern void odeMassSetCapsule(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeMassSetCapsuleTotal")]
  public static extern void odeMassSetCapsuleTotal(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeMassSetCylinder")]
  public static extern void odeMassSetCylinder(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeMassSetCylinderTotal")]
  public static extern void odeMassSetCylinderTotal(int jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("UnityOde", EntryPoint="CSharp_odeMassSetBox")]
  public static extern void odeMassSetBox(int jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("UnityOde", EntryPoint="CSharp_odeMassSetBoxTotal")]
  public static extern void odeMassSetBoxTotal(int jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGetMaxContactSpeed")]
  public static extern float odeGetMaxContactSpeed(int jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeWorldSetGravity")]
  public static extern void odeWorldSetGravity(float jarg1, float jarg2, float jarg3);

  [DllImport("UnityOde", EntryPoint="CSharp_odeWorldSetCFM")]
  public static extern void odeWorldSetCFM(float jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeWorldSetERP")]
  public static extern void odeWorldSetERP(float jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeWorldSetContactMaxCorrectingVel")]
  public static extern void odeWorldSetContactMaxCorrectingVel(float jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeWorldSetContactSurfaceLayer")]
  public static extern void odeWorldSetContactSurfaceLayer(float jarg1);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGetContactCount")]
  public static extern int odeGetContactCount();

  [DllImport("UnityOde", EntryPoint="CSharp_odeGetContactInfo")]
  public static extern void odeGetContactInfo(int jarg1, out int jarg2, out int jarg3, /* imtype */ IntPtr jarg4, /* imtype */ IntPtr jarg5, /* imtype */ IntPtr jarg6);

  [DllImport("UnityOde", EntryPoint="CSharp_odeRaycast__SWIG_0")]
  public static extern int odeRaycast__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, /* imtype */ IntPtr jarg8, out float jarg9, uint jarg10, uint jarg11);

  [DllImport("UnityOde", EntryPoint="CSharp_odeRaycast__SWIG_1")]
  public static extern int odeRaycast__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, /* imtype */ IntPtr jarg8, out float jarg9, uint jarg10);

  [DllImport("UnityOde", EntryPoint="CSharp_odeRaycast__SWIG_2")]
  public static extern int odeRaycast__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, /* imtype */ IntPtr jarg8, out float jarg9);

  [DllImport("UnityOde", EntryPoint="CSharp_odeRaycastGeom__SWIG_0")]
  public static extern bool odeRaycastGeom__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, /* imtype */ IntPtr jarg8, out float jarg9, uint jarg10, uint jarg11);

  [DllImport("UnityOde", EntryPoint="CSharp_odeRaycastGeom__SWIG_1")]
  public static extern bool odeRaycastGeom__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, /* imtype */ IntPtr jarg8, out float jarg9, uint jarg10);

  [DllImport("UnityOde", EntryPoint="CSharp_odeRaycastGeom__SWIG_2")]
  public static extern bool odeRaycastGeom__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, /* imtype */ IntPtr jarg8, out float jarg9);

  [DllImport("UnityOde", EntryPoint="CSharp_odeGetContact")]
  public static extern bool odeGetContact(int jarg1, int jarg2, /* imtype */ IntPtr jarg3, /* imtype */ IntPtr jarg4, /* imtype */ IntPtr jarg5);
}
